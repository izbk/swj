<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yuanwei.center.mapper.AdviceMapper">
  <resultMap id="BaseResultMap" type="cn.com.yuanwei.center.entity.Advice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="advice_title" jdbcType="VARCHAR" property="adviceTitle" />
    <result column="advice_content" jdbcType="VARCHAR" property="adviceContent" />
    <result column="advice_type" jdbcType="INTEGER" property="adviceType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_deal" jdbcType="INTEGER" property="isDeal" />
    <result column="res_content" jdbcType="VARCHAR" property="resContent" />
    <result column="deal_by" jdbcType="INTEGER" property="dealBy" />
    <result column="deal_time" jdbcType="TIMESTAMP" property="dealTime" />
    <result column="audit1_by" jdbcType="INTEGER" property="audit1By" />
    <result column="audit1_time" jdbcType="TIMESTAMP" property="audit1Time" />
    <result column="audit2_by" jdbcType="INTEGER" property="audit2By" />
    <result column="audit2_time" jdbcType="TIMESTAMP" property="audit2Time" />
    <result column="audit3_by" jdbcType="INTEGER" property="audit3By" />
    <result column="audit3_time" jdbcType="TIMESTAMP" property="audit3Time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.com.yuanwei.center.entity.Advice">
    <result column="audit1_opinion" jdbcType="LONGVARCHAR" property="audit1Opinion" />
    <result column="audit2_opinion" jdbcType="LONGVARCHAR" property="audit2Opinion" />
    <result column="audit3_opinion" jdbcType="LONGVARCHAR" property="audit3Opinion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, mobile, email, advice_title, advice_content, advice_type, status, create_time, 
    is_deal, res_content, deal_by, deal_time, audit1_by, audit1_time, audit2_by, audit2_time, 
    audit3_by, audit3_time
  </sql>
  <sql id="Blob_Column_List">
    audit1_opinion, audit2_opinion, audit3_opinion
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.com.yuanwei.center.entity.AdviceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.com.yuanwei.center.entity.AdviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from advice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from advice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yuanwei.center.entity.AdviceExample">
    delete from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yuanwei.center.entity.Advice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into advice (name, mobile, email, 
      advice_title, advice_content, advice_type, 
      status, create_time, is_deal, 
      res_content, deal_by, deal_time, 
      audit1_by, audit1_time, audit2_by, 
      audit2_time, audit3_by, audit3_time, 
      audit1_opinion, audit2_opinion, audit3_opinion
      )
    values (#{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{adviceTitle,jdbcType=VARCHAR}, #{adviceContent,jdbcType=VARCHAR}, #{adviceType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{isDeal,jdbcType=INTEGER}, 
      #{resContent,jdbcType=VARCHAR}, #{dealBy,jdbcType=INTEGER}, #{dealTime,jdbcType=TIMESTAMP}, 
      #{audit1By,jdbcType=INTEGER}, #{audit1Time,jdbcType=TIMESTAMP}, #{audit2By,jdbcType=INTEGER}, 
      #{audit2Time,jdbcType=TIMESTAMP}, #{audit3By,jdbcType=INTEGER}, #{audit3Time,jdbcType=TIMESTAMP}, 
      #{audit1Opinion,jdbcType=LONGVARCHAR}, #{audit2Opinion,jdbcType=LONGVARCHAR}, #{audit3Opinion,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yuanwei.center.entity.Advice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into advice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="adviceTitle != null">
        advice_title,
      </if>
      <if test="adviceContent != null">
        advice_content,
      </if>
      <if test="adviceType != null">
        advice_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDeal != null">
        is_deal,
      </if>
      <if test="resContent != null">
        res_content,
      </if>
      <if test="dealBy != null">
        deal_by,
      </if>
      <if test="dealTime != null">
        deal_time,
      </if>
      <if test="audit1By != null">
        audit1_by,
      </if>
      <if test="audit1Time != null">
        audit1_time,
      </if>
      <if test="audit2By != null">
        audit2_by,
      </if>
      <if test="audit2Time != null">
        audit2_time,
      </if>
      <if test="audit3By != null">
        audit3_by,
      </if>
      <if test="audit3Time != null">
        audit3_time,
      </if>
      <if test="audit1Opinion != null">
        audit1_opinion,
      </if>
      <if test="audit2Opinion != null">
        audit2_opinion,
      </if>
      <if test="audit3Opinion != null">
        audit3_opinion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="adviceTitle != null">
        #{adviceTitle,jdbcType=VARCHAR},
      </if>
      <if test="adviceContent != null">
        #{adviceContent,jdbcType=VARCHAR},
      </if>
      <if test="adviceType != null">
        #{adviceType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeal != null">
        #{isDeal,jdbcType=INTEGER},
      </if>
      <if test="resContent != null">
        #{resContent,jdbcType=VARCHAR},
      </if>
      <if test="dealBy != null">
        #{dealBy,jdbcType=INTEGER},
      </if>
      <if test="dealTime != null">
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1By != null">
        #{audit1By,jdbcType=INTEGER},
      </if>
      <if test="audit1Time != null">
        #{audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit2By != null">
        #{audit2By,jdbcType=INTEGER},
      </if>
      <if test="audit2Time != null">
        #{audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit3By != null">
        #{audit3By,jdbcType=INTEGER},
      </if>
      <if test="audit3Time != null">
        #{audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1Opinion != null">
        #{audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit2Opinion != null">
        #{audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit3Opinion != null">
        #{audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yuanwei.center.entity.AdviceExample" resultType="java.lang.Integer">
    select count(*) from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update advice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.adviceTitle != null">
        advice_title = #{record.adviceTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.adviceContent != null">
        advice_content = #{record.adviceContent,jdbcType=VARCHAR},
      </if>
      <if test="record.adviceType != null">
        advice_type = #{record.adviceType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeal != null">
        is_deal = #{record.isDeal,jdbcType=INTEGER},
      </if>
      <if test="record.resContent != null">
        res_content = #{record.resContent,jdbcType=VARCHAR},
      </if>
      <if test="record.dealBy != null">
        deal_by = #{record.dealBy,jdbcType=INTEGER},
      </if>
      <if test="record.dealTime != null">
        deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit1By != null">
        audit1_by = #{record.audit1By,jdbcType=INTEGER},
      </if>
      <if test="record.audit1Time != null">
        audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit2By != null">
        audit2_by = #{record.audit2By,jdbcType=INTEGER},
      </if>
      <if test="record.audit2Time != null">
        audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit3By != null">
        audit3_by = #{record.audit3By,jdbcType=INTEGER},
      </if>
      <if test="record.audit3Time != null">
        audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit1Opinion != null">
        audit1_opinion = #{record.audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.audit2Opinion != null">
        audit2_opinion = #{record.audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.audit3Opinion != null">
        audit3_opinion = #{record.audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update advice
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      advice_title = #{record.adviceTitle,jdbcType=VARCHAR},
      advice_content = #{record.adviceContent,jdbcType=VARCHAR},
      advice_type = #{record.adviceType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_deal = #{record.isDeal,jdbcType=INTEGER},
      res_content = #{record.resContent,jdbcType=VARCHAR},
      deal_by = #{record.dealBy,jdbcType=INTEGER},
      deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      audit1_by = #{record.audit1By,jdbcType=INTEGER},
      audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{record.audit2By,jdbcType=INTEGER},
      audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{record.audit3By,jdbcType=INTEGER},
      audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      audit1_opinion = #{record.audit1Opinion,jdbcType=LONGVARCHAR},
      audit2_opinion = #{record.audit2Opinion,jdbcType=LONGVARCHAR},
      audit3_opinion = #{record.audit3Opinion,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update advice
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      advice_title = #{record.adviceTitle,jdbcType=VARCHAR},
      advice_content = #{record.adviceContent,jdbcType=VARCHAR},
      advice_type = #{record.adviceType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_deal = #{record.isDeal,jdbcType=INTEGER},
      res_content = #{record.resContent,jdbcType=VARCHAR},
      deal_by = #{record.dealBy,jdbcType=INTEGER},
      deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      audit1_by = #{record.audit1By,jdbcType=INTEGER},
      audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{record.audit2By,jdbcType=INTEGER},
      audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{record.audit3By,jdbcType=INTEGER},
      audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yuanwei.center.entity.Advice">
    update advice
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="adviceTitle != null">
        advice_title = #{adviceTitle,jdbcType=VARCHAR},
      </if>
      <if test="adviceContent != null">
        advice_content = #{adviceContent,jdbcType=VARCHAR},
      </if>
      <if test="adviceType != null">
        advice_type = #{adviceType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeal != null">
        is_deal = #{isDeal,jdbcType=INTEGER},
      </if>
      <if test="resContent != null">
        res_content = #{resContent,jdbcType=VARCHAR},
      </if>
      <if test="dealBy != null">
        deal_by = #{dealBy,jdbcType=INTEGER},
      </if>
      <if test="dealTime != null">
        deal_time = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1By != null">
        audit1_by = #{audit1By,jdbcType=INTEGER},
      </if>
      <if test="audit1Time != null">
        audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit2By != null">
        audit2_by = #{audit2By,jdbcType=INTEGER},
      </if>
      <if test="audit2Time != null">
        audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit3By != null">
        audit3_by = #{audit3By,jdbcType=INTEGER},
      </if>
      <if test="audit3Time != null">
        audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1Opinion != null">
        audit1_opinion = #{audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit2Opinion != null">
        audit2_opinion = #{audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit3Opinion != null">
        audit3_opinion = #{audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.yuanwei.center.entity.Advice">
    update advice
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      advice_title = #{adviceTitle,jdbcType=VARCHAR},
      advice_content = #{adviceContent,jdbcType=VARCHAR},
      advice_type = #{adviceType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_deal = #{isDeal,jdbcType=INTEGER},
      res_content = #{resContent,jdbcType=VARCHAR},
      deal_by = #{dealBy,jdbcType=INTEGER},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      audit1_by = #{audit1By,jdbcType=INTEGER},
      audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{audit2By,jdbcType=INTEGER},
      audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{audit3By,jdbcType=INTEGER},
      audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      audit1_opinion = #{audit1Opinion,jdbcType=LONGVARCHAR},
      audit2_opinion = #{audit2Opinion,jdbcType=LONGVARCHAR},
      audit3_opinion = #{audit3Opinion,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yuanwei.center.entity.Advice">
    update advice
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      advice_title = #{adviceTitle,jdbcType=VARCHAR},
      advice_content = #{adviceContent,jdbcType=VARCHAR},
      advice_type = #{adviceType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_deal = #{isDeal,jdbcType=INTEGER},
      res_content = #{resContent,jdbcType=VARCHAR},
      deal_by = #{dealBy,jdbcType=INTEGER},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      audit1_by = #{audit1By,jdbcType=INTEGER},
      audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{audit2By,jdbcType=INTEGER},
      audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{audit3By,jdbcType=INTEGER},
      audit3_time = #{audit3Time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.com.yuanwei.center.entity.AdviceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.com.yuanwei.center.entity.AdviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>