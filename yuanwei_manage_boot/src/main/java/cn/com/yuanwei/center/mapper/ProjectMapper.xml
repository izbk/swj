<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yuanwei.center.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="cn.com.yuanwei.center.entity.Project">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="planned_start_date" jdbcType="DATE" property="plannedStartDate" />
    <result column="planned_completion_time" jdbcType="DATE" property="plannedCompletionTime" />
    <result column="land_area" jdbcType="DECIMAL" property="landArea" />
    <result column="building_area" jdbcType="DECIMAL" property="buildingArea" />
    <result column="business_area" jdbcType="DECIMAL" property="businessArea" />
    <result column="is_use" jdbcType="INTEGER" property="isUse" />
    <result column="is_stage" jdbcType="INTEGER" property="isStage" />
    <result column="is_beyond_year" jdbcType="INTEGER" property="isBeyondYear" />
    <result column="project_type" jdbcType="INTEGER" property="projectType" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="legal_person" jdbcType="VARCHAR" property="legalPerson" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="record_num" jdbcType="VARCHAR" property="recordNum" />
    <result column="approve_investment" jdbcType="DECIMAL" property="approveInvestment" />
    <result column="program_investment" jdbcType="DECIMAL" property="programInvestment" />
    <result column="plan_investment" jdbcType="DECIMAL" property="planInvestment" />
    <result column="real_investment" jdbcType="DECIMAL" property="realInvestment" />
    <result column="raise" jdbcType="DECIMAL" property="raise" />
    <result column="loan" jdbcType="DECIMAL" property="loan" />
    <result column="other" jdbcType="DECIMAL" property="other" />
    <result column="build_status" jdbcType="INTEGER" property="buildStatus" />
    <result column="construction_content" jdbcType="VARCHAR" property="constructionContent" />
    <result column="proposal" jdbcType="VARCHAR" property="proposal" />
    <result column="assessment" jdbcType="VARCHAR" property="assessment" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="audit1_by" jdbcType="INTEGER" property="audit1By" />
    <result column="audit1_time" jdbcType="TIMESTAMP" property="audit1Time" />
    <result column="audit2_by" jdbcType="INTEGER" property="audit2By" />
    <result column="audit2_time" jdbcType="TIMESTAMP" property="audit2Time" />
    <result column="audit3_by" jdbcType="INTEGER" property="audit3By" />
    <result column="audit3_time" jdbcType="TIMESTAMP" property="audit3Time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.com.yuanwei.center.entity.Project">
    <result column="audit1_opinion" jdbcType="LONGVARCHAR" property="audit1Opinion" />
    <result column="audit2_opinion" jdbcType="LONGVARCHAR" property="audit2Opinion" />
    <result column="audit3_opinion" jdbcType="LONGVARCHAR" property="audit3Opinion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_name, address, planned_start_date, planned_completion_time, land_area, 
    building_area, business_area, is_use, is_stage, is_beyond_year, project_type, owner, 
    legal_person, contact, record_num, approve_investment, program_investment, plan_investment, 
    real_investment, raise, loan, other, build_status, construction_content, proposal, 
    assessment, pay_status, status, create_time, audit1_by, audit1_time, audit2_by, audit2_time, 
    audit3_by, audit3_time
  </sql>
  <sql id="Blob_Column_List">
    audit1_opinion, audit2_opinion, audit3_opinion
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.com.yuanwei.center.entity.ProjectExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.com.yuanwei.center.entity.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yuanwei.center.entity.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yuanwei.center.entity.Project">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project (project_name, address, planned_start_date, 
      planned_completion_time, land_area, building_area, 
      business_area, is_use, is_stage, 
      is_beyond_year, project_type, owner, 
      legal_person, contact, record_num, 
      approve_investment, program_investment, plan_investment, 
      real_investment, raise, loan, 
      other, build_status, construction_content, 
      proposal, assessment, pay_status, 
      status, create_time, audit1_by, 
      audit1_time, audit2_by, audit2_time, 
      audit3_by, audit3_time, audit1_opinion, 
      audit2_opinion, audit3_opinion)
    values (#{projectName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{plannedStartDate,jdbcType=DATE}, 
      #{plannedCompletionTime,jdbcType=DATE}, #{landArea,jdbcType=DECIMAL}, #{buildingArea,jdbcType=DECIMAL}, 
      #{businessArea,jdbcType=DECIMAL}, #{isUse,jdbcType=INTEGER}, #{isStage,jdbcType=INTEGER}, 
      #{isBeyondYear,jdbcType=INTEGER}, #{projectType,jdbcType=INTEGER}, #{owner,jdbcType=VARCHAR}, 
      #{legalPerson,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{recordNum,jdbcType=VARCHAR}, 
      #{approveInvestment,jdbcType=DECIMAL}, #{programInvestment,jdbcType=DECIMAL}, #{planInvestment,jdbcType=DECIMAL}, 
      #{realInvestment,jdbcType=DECIMAL}, #{raise,jdbcType=DECIMAL}, #{loan,jdbcType=DECIMAL}, 
      #{other,jdbcType=DECIMAL}, #{buildStatus,jdbcType=INTEGER}, #{constructionContent,jdbcType=VARCHAR}, 
      #{proposal,jdbcType=VARCHAR}, #{assessment,jdbcType=VARCHAR}, #{payStatus,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{audit1By,jdbcType=INTEGER}, 
      #{audit1Time,jdbcType=TIMESTAMP}, #{audit2By,jdbcType=INTEGER}, #{audit2Time,jdbcType=TIMESTAMP}, 
      #{audit3By,jdbcType=INTEGER}, #{audit3Time,jdbcType=TIMESTAMP}, #{audit1Opinion,jdbcType=LONGVARCHAR}, 
      #{audit2Opinion,jdbcType=LONGVARCHAR}, #{audit3Opinion,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yuanwei.center.entity.Project">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        project_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="plannedStartDate != null">
        planned_start_date,
      </if>
      <if test="plannedCompletionTime != null">
        planned_completion_time,
      </if>
      <if test="landArea != null">
        land_area,
      </if>
      <if test="buildingArea != null">
        building_area,
      </if>
      <if test="businessArea != null">
        business_area,
      </if>
      <if test="isUse != null">
        is_use,
      </if>
      <if test="isStage != null">
        is_stage,
      </if>
      <if test="isBeyondYear != null">
        is_beyond_year,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="legalPerson != null">
        legal_person,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="recordNum != null">
        record_num,
      </if>
      <if test="approveInvestment != null">
        approve_investment,
      </if>
      <if test="programInvestment != null">
        program_investment,
      </if>
      <if test="planInvestment != null">
        plan_investment,
      </if>
      <if test="realInvestment != null">
        real_investment,
      </if>
      <if test="raise != null">
        raise,
      </if>
      <if test="loan != null">
        loan,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="buildStatus != null">
        build_status,
      </if>
      <if test="constructionContent != null">
        construction_content,
      </if>
      <if test="proposal != null">
        proposal,
      </if>
      <if test="assessment != null">
        assessment,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="audit1By != null">
        audit1_by,
      </if>
      <if test="audit1Time != null">
        audit1_time,
      </if>
      <if test="audit2By != null">
        audit2_by,
      </if>
      <if test="audit2Time != null">
        audit2_time,
      </if>
      <if test="audit3By != null">
        audit3_by,
      </if>
      <if test="audit3Time != null">
        audit3_time,
      </if>
      <if test="audit1Opinion != null">
        audit1_opinion,
      </if>
      <if test="audit2Opinion != null">
        audit2_opinion,
      </if>
      <if test="audit3Opinion != null">
        audit3_opinion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="plannedStartDate != null">
        #{plannedStartDate,jdbcType=DATE},
      </if>
      <if test="plannedCompletionTime != null">
        #{plannedCompletionTime,jdbcType=DATE},
      </if>
      <if test="landArea != null">
        #{landArea,jdbcType=DECIMAL},
      </if>
      <if test="buildingArea != null">
        #{buildingArea,jdbcType=DECIMAL},
      </if>
      <if test="businessArea != null">
        #{businessArea,jdbcType=DECIMAL},
      </if>
      <if test="isUse != null">
        #{isUse,jdbcType=INTEGER},
      </if>
      <if test="isStage != null">
        #{isStage,jdbcType=INTEGER},
      </if>
      <if test="isBeyondYear != null">
        #{isBeyondYear,jdbcType=INTEGER},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="recordNum != null">
        #{recordNum,jdbcType=VARCHAR},
      </if>
      <if test="approveInvestment != null">
        #{approveInvestment,jdbcType=DECIMAL},
      </if>
      <if test="programInvestment != null">
        #{programInvestment,jdbcType=DECIMAL},
      </if>
      <if test="planInvestment != null">
        #{planInvestment,jdbcType=DECIMAL},
      </if>
      <if test="realInvestment != null">
        #{realInvestment,jdbcType=DECIMAL},
      </if>
      <if test="raise != null">
        #{raise,jdbcType=DECIMAL},
      </if>
      <if test="loan != null">
        #{loan,jdbcType=DECIMAL},
      </if>
      <if test="other != null">
        #{other,jdbcType=DECIMAL},
      </if>
      <if test="buildStatus != null">
        #{buildStatus,jdbcType=INTEGER},
      </if>
      <if test="constructionContent != null">
        #{constructionContent,jdbcType=VARCHAR},
      </if>
      <if test="proposal != null">
        #{proposal,jdbcType=VARCHAR},
      </if>
      <if test="assessment != null">
        #{assessment,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1By != null">
        #{audit1By,jdbcType=INTEGER},
      </if>
      <if test="audit1Time != null">
        #{audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit2By != null">
        #{audit2By,jdbcType=INTEGER},
      </if>
      <if test="audit2Time != null">
        #{audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit3By != null">
        #{audit3By,jdbcType=INTEGER},
      </if>
      <if test="audit3Time != null">
        #{audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1Opinion != null">
        #{audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit2Opinion != null">
        #{audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit3Opinion != null">
        #{audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yuanwei.center.entity.ProjectExample" resultType="java.lang.Integer">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.plannedStartDate != null">
        planned_start_date = #{record.plannedStartDate,jdbcType=DATE},
      </if>
      <if test="record.plannedCompletionTime != null">
        planned_completion_time = #{record.plannedCompletionTime,jdbcType=DATE},
      </if>
      <if test="record.landArea != null">
        land_area = #{record.landArea,jdbcType=DECIMAL},
      </if>
      <if test="record.buildingArea != null">
        building_area = #{record.buildingArea,jdbcType=DECIMAL},
      </if>
      <if test="record.businessArea != null">
        business_area = #{record.businessArea,jdbcType=DECIMAL},
      </if>
      <if test="record.isUse != null">
        is_use = #{record.isUse,jdbcType=INTEGER},
      </if>
      <if test="record.isStage != null">
        is_stage = #{record.isStage,jdbcType=INTEGER},
      </if>
      <if test="record.isBeyondYear != null">
        is_beyond_year = #{record.isBeyondYear,jdbcType=INTEGER},
      </if>
      <if test="record.projectType != null">
        project_type = #{record.projectType,jdbcType=INTEGER},
      </if>
      <if test="record.owner != null">
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPerson != null">
        legal_person = #{record.legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.recordNum != null">
        record_num = #{record.recordNum,jdbcType=VARCHAR},
      </if>
      <if test="record.approveInvestment != null">
        approve_investment = #{record.approveInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.programInvestment != null">
        program_investment = #{record.programInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.planInvestment != null">
        plan_investment = #{record.planInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.realInvestment != null">
        real_investment = #{record.realInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.raise != null">
        raise = #{record.raise,jdbcType=DECIMAL},
      </if>
      <if test="record.loan != null">
        loan = #{record.loan,jdbcType=DECIMAL},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=DECIMAL},
      </if>
      <if test="record.buildStatus != null">
        build_status = #{record.buildStatus,jdbcType=INTEGER},
      </if>
      <if test="record.constructionContent != null">
        construction_content = #{record.constructionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.proposal != null">
        proposal = #{record.proposal,jdbcType=VARCHAR},
      </if>
      <if test="record.assessment != null">
        assessment = #{record.assessment,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit1By != null">
        audit1_by = #{record.audit1By,jdbcType=INTEGER},
      </if>
      <if test="record.audit1Time != null">
        audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit2By != null">
        audit2_by = #{record.audit2By,jdbcType=INTEGER},
      </if>
      <if test="record.audit2Time != null">
        audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit3By != null">
        audit3_by = #{record.audit3By,jdbcType=INTEGER},
      </if>
      <if test="record.audit3Time != null">
        audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit1Opinion != null">
        audit1_opinion = #{record.audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.audit2Opinion != null">
        audit2_opinion = #{record.audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.audit3Opinion != null">
        audit3_opinion = #{record.audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update project
    set id = #{record.id,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      planned_start_date = #{record.plannedStartDate,jdbcType=DATE},
      planned_completion_time = #{record.plannedCompletionTime,jdbcType=DATE},
      land_area = #{record.landArea,jdbcType=DECIMAL},
      building_area = #{record.buildingArea,jdbcType=DECIMAL},
      business_area = #{record.businessArea,jdbcType=DECIMAL},
      is_use = #{record.isUse,jdbcType=INTEGER},
      is_stage = #{record.isStage,jdbcType=INTEGER},
      is_beyond_year = #{record.isBeyondYear,jdbcType=INTEGER},
      project_type = #{record.projectType,jdbcType=INTEGER},
      owner = #{record.owner,jdbcType=VARCHAR},
      legal_person = #{record.legalPerson,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      record_num = #{record.recordNum,jdbcType=VARCHAR},
      approve_investment = #{record.approveInvestment,jdbcType=DECIMAL},
      program_investment = #{record.programInvestment,jdbcType=DECIMAL},
      plan_investment = #{record.planInvestment,jdbcType=DECIMAL},
      real_investment = #{record.realInvestment,jdbcType=DECIMAL},
      raise = #{record.raise,jdbcType=DECIMAL},
      loan = #{record.loan,jdbcType=DECIMAL},
      other = #{record.other,jdbcType=DECIMAL},
      build_status = #{record.buildStatus,jdbcType=INTEGER},
      construction_content = #{record.constructionContent,jdbcType=VARCHAR},
      proposal = #{record.proposal,jdbcType=VARCHAR},
      assessment = #{record.assessment,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      audit1_by = #{record.audit1By,jdbcType=INTEGER},
      audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{record.audit2By,jdbcType=INTEGER},
      audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{record.audit3By,jdbcType=INTEGER},
      audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      audit1_opinion = #{record.audit1Opinion,jdbcType=LONGVARCHAR},
      audit2_opinion = #{record.audit2Opinion,jdbcType=LONGVARCHAR},
      audit3_opinion = #{record.audit3Opinion,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set id = #{record.id,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      planned_start_date = #{record.plannedStartDate,jdbcType=DATE},
      planned_completion_time = #{record.plannedCompletionTime,jdbcType=DATE},
      land_area = #{record.landArea,jdbcType=DECIMAL},
      building_area = #{record.buildingArea,jdbcType=DECIMAL},
      business_area = #{record.businessArea,jdbcType=DECIMAL},
      is_use = #{record.isUse,jdbcType=INTEGER},
      is_stage = #{record.isStage,jdbcType=INTEGER},
      is_beyond_year = #{record.isBeyondYear,jdbcType=INTEGER},
      project_type = #{record.projectType,jdbcType=INTEGER},
      owner = #{record.owner,jdbcType=VARCHAR},
      legal_person = #{record.legalPerson,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      record_num = #{record.recordNum,jdbcType=VARCHAR},
      approve_investment = #{record.approveInvestment,jdbcType=DECIMAL},
      program_investment = #{record.programInvestment,jdbcType=DECIMAL},
      plan_investment = #{record.planInvestment,jdbcType=DECIMAL},
      real_investment = #{record.realInvestment,jdbcType=DECIMAL},
      raise = #{record.raise,jdbcType=DECIMAL},
      loan = #{record.loan,jdbcType=DECIMAL},
      other = #{record.other,jdbcType=DECIMAL},
      build_status = #{record.buildStatus,jdbcType=INTEGER},
      construction_content = #{record.constructionContent,jdbcType=VARCHAR},
      proposal = #{record.proposal,jdbcType=VARCHAR},
      assessment = #{record.assessment,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      audit1_by = #{record.audit1By,jdbcType=INTEGER},
      audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{record.audit2By,jdbcType=INTEGER},
      audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{record.audit3By,jdbcType=INTEGER},
      audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yuanwei.center.entity.Project">
    update project
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="plannedStartDate != null">
        planned_start_date = #{plannedStartDate,jdbcType=DATE},
      </if>
      <if test="plannedCompletionTime != null">
        planned_completion_time = #{plannedCompletionTime,jdbcType=DATE},
      </if>
      <if test="landArea != null">
        land_area = #{landArea,jdbcType=DECIMAL},
      </if>
      <if test="buildingArea != null">
        building_area = #{buildingArea,jdbcType=DECIMAL},
      </if>
      <if test="businessArea != null">
        business_area = #{businessArea,jdbcType=DECIMAL},
      </if>
      <if test="isUse != null">
        is_use = #{isUse,jdbcType=INTEGER},
      </if>
      <if test="isStage != null">
        is_stage = #{isStage,jdbcType=INTEGER},
      </if>
      <if test="isBeyondYear != null">
        is_beyond_year = #{isBeyondYear,jdbcType=INTEGER},
      </if>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        legal_person = #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="recordNum != null">
        record_num = #{recordNum,jdbcType=VARCHAR},
      </if>
      <if test="approveInvestment != null">
        approve_investment = #{approveInvestment,jdbcType=DECIMAL},
      </if>
      <if test="programInvestment != null">
        program_investment = #{programInvestment,jdbcType=DECIMAL},
      </if>
      <if test="planInvestment != null">
        plan_investment = #{planInvestment,jdbcType=DECIMAL},
      </if>
      <if test="realInvestment != null">
        real_investment = #{realInvestment,jdbcType=DECIMAL},
      </if>
      <if test="raise != null">
        raise = #{raise,jdbcType=DECIMAL},
      </if>
      <if test="loan != null">
        loan = #{loan,jdbcType=DECIMAL},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=DECIMAL},
      </if>
      <if test="buildStatus != null">
        build_status = #{buildStatus,jdbcType=INTEGER},
      </if>
      <if test="constructionContent != null">
        construction_content = #{constructionContent,jdbcType=VARCHAR},
      </if>
      <if test="proposal != null">
        proposal = #{proposal,jdbcType=VARCHAR},
      </if>
      <if test="assessment != null">
        assessment = #{assessment,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1By != null">
        audit1_by = #{audit1By,jdbcType=INTEGER},
      </if>
      <if test="audit1Time != null">
        audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit2By != null">
        audit2_by = #{audit2By,jdbcType=INTEGER},
      </if>
      <if test="audit2Time != null">
        audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit3By != null">
        audit3_by = #{audit3By,jdbcType=INTEGER},
      </if>
      <if test="audit3Time != null">
        audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1Opinion != null">
        audit1_opinion = #{audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit2Opinion != null">
        audit2_opinion = #{audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit3Opinion != null">
        audit3_opinion = #{audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.yuanwei.center.entity.Project">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      planned_start_date = #{plannedStartDate,jdbcType=DATE},
      planned_completion_time = #{plannedCompletionTime,jdbcType=DATE},
      land_area = #{landArea,jdbcType=DECIMAL},
      building_area = #{buildingArea,jdbcType=DECIMAL},
      business_area = #{businessArea,jdbcType=DECIMAL},
      is_use = #{isUse,jdbcType=INTEGER},
      is_stage = #{isStage,jdbcType=INTEGER},
      is_beyond_year = #{isBeyondYear,jdbcType=INTEGER},
      project_type = #{projectType,jdbcType=INTEGER},
      owner = #{owner,jdbcType=VARCHAR},
      legal_person = #{legalPerson,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      record_num = #{recordNum,jdbcType=VARCHAR},
      approve_investment = #{approveInvestment,jdbcType=DECIMAL},
      program_investment = #{programInvestment,jdbcType=DECIMAL},
      plan_investment = #{planInvestment,jdbcType=DECIMAL},
      real_investment = #{realInvestment,jdbcType=DECIMAL},
      raise = #{raise,jdbcType=DECIMAL},
      loan = #{loan,jdbcType=DECIMAL},
      other = #{other,jdbcType=DECIMAL},
      build_status = #{buildStatus,jdbcType=INTEGER},
      construction_content = #{constructionContent,jdbcType=VARCHAR},
      proposal = #{proposal,jdbcType=VARCHAR},
      assessment = #{assessment,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      audit1_by = #{audit1By,jdbcType=INTEGER},
      audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{audit2By,jdbcType=INTEGER},
      audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{audit3By,jdbcType=INTEGER},
      audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      audit1_opinion = #{audit1Opinion,jdbcType=LONGVARCHAR},
      audit2_opinion = #{audit2Opinion,jdbcType=LONGVARCHAR},
      audit3_opinion = #{audit3Opinion,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yuanwei.center.entity.Project">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      planned_start_date = #{plannedStartDate,jdbcType=DATE},
      planned_completion_time = #{plannedCompletionTime,jdbcType=DATE},
      land_area = #{landArea,jdbcType=DECIMAL},
      building_area = #{buildingArea,jdbcType=DECIMAL},
      business_area = #{businessArea,jdbcType=DECIMAL},
      is_use = #{isUse,jdbcType=INTEGER},
      is_stage = #{isStage,jdbcType=INTEGER},
      is_beyond_year = #{isBeyondYear,jdbcType=INTEGER},
      project_type = #{projectType,jdbcType=INTEGER},
      owner = #{owner,jdbcType=VARCHAR},
      legal_person = #{legalPerson,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      record_num = #{recordNum,jdbcType=VARCHAR},
      approve_investment = #{approveInvestment,jdbcType=DECIMAL},
      program_investment = #{programInvestment,jdbcType=DECIMAL},
      plan_investment = #{planInvestment,jdbcType=DECIMAL},
      real_investment = #{realInvestment,jdbcType=DECIMAL},
      raise = #{raise,jdbcType=DECIMAL},
      loan = #{loan,jdbcType=DECIMAL},
      other = #{other,jdbcType=DECIMAL},
      build_status = #{buildStatus,jdbcType=INTEGER},
      construction_content = #{constructionContent,jdbcType=VARCHAR},
      proposal = #{proposal,jdbcType=VARCHAR},
      assessment = #{assessment,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      audit1_by = #{audit1By,jdbcType=INTEGER},
      audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{audit2By,jdbcType=INTEGER},
      audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{audit3By,jdbcType=INTEGER},
      audit3_time = #{audit3Time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.com.yuanwei.center.entity.ProjectExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.com.yuanwei.center.entity.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>