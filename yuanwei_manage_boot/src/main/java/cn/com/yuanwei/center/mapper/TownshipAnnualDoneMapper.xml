<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yuanwei.center.mapper.TownshipAnnualDoneMapper">
  <resultMap id="BaseResultMap" type="cn.com.yuanwei.center.entity.TownshipAnnualDone">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="township_id" jdbcType="INTEGER" property="townshipId" />
    <result column="township_name" jdbcType="VARCHAR" property="townshipName" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="retail_sales_done" jdbcType="DECIMAL" property="retailSalesDone" />
    <result column="sales_done" jdbcType="DECIMAL" property="salesDone" />
    <result column="gross_done" jdbcType="DECIMAL" property="grossDone" />
    <result column="done_ratio" jdbcType="DECIMAL" property="doneRatio" />
    <result column="retail_sales_growth" jdbcType="DECIMAL" property="retailSalesGrowth" />
    <result column="sales_growth" jdbcType="DECIMAL" property="salesGrowth" />
    <result column="overall_growth" jdbcType="DECIMAL" property="overallGrowth" />
    <result column="total_apply" jdbcType="INTEGER" property="totalApply" />
    <result column="real_add" jdbcType="INTEGER" property="realAdd" />
    <result column="overfulfilled_add" jdbcType="INTEGER" property="overfulfilledAdd" />
    <result column="add_score" jdbcType="INTEGER" property="addScore" />
    <result column="gross_qualifying" jdbcType="INTEGER" property="grossQualifying" />
    <result column="progress_qualifying" jdbcType="INTEGER" property="progressQualifying" />
    <result column="growth_qualifying" jdbcType="INTEGER" property="growthQualifying" />
    <result column="add_qualifying" jdbcType="INTEGER" property="addQualifying" />
    <result column="gross_point" jdbcType="INTEGER" property="grossPoint" />
    <result column="growth_point" jdbcType="INTEGER" property="growthPoint" />
    <result column="task_point" jdbcType="INTEGER" property="taskPoint" />
    <result column="per_point_value" jdbcType="DECIMAL" property="perPointValue" />
    <result column="allowance" jdbcType="DECIMAL" property="allowance" />
    <result column="add_point" jdbcType="INTEGER" property="addPoint" />
    <result column="total_point" jdbcType="INTEGER" property="totalPoint" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, township_id, township_name, year, retail_sales_done, sales_done, gross_done, 
    done_ratio, retail_sales_growth, sales_growth, overall_growth, total_apply, real_add, 
    overfulfilled_add, add_score, gross_qualifying, progress_qualifying, growth_qualifying, 
    add_qualifying, gross_point, growth_point, task_point, per_point_value, allowance, 
    add_point, total_point, create_by, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDoneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from township_annual_done
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from township_annual_done
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from township_annual_done
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDoneExample">
    delete from township_annual_done
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDone"  useGeneratedKeys="true" keyProperty="id">
    insert into township_annual_done (id, township_id, township_name, 
      year, retail_sales_done, sales_done, 
      gross_done, done_ratio, retail_sales_growth, 
      sales_growth, overall_growth, total_apply, 
      real_add, overfulfilled_add, add_score, 
      gross_qualifying, progress_qualifying, growth_qualifying, 
      add_qualifying, gross_point, growth_point, 
      task_point, per_point_value, allowance, 
      add_point, total_point, create_by, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{townshipId,jdbcType=INTEGER}, #{townshipName,jdbcType=VARCHAR}, 
      #{year,jdbcType=INTEGER}, #{retailSalesDone,jdbcType=DECIMAL}, #{salesDone,jdbcType=DECIMAL}, 
      #{grossDone,jdbcType=DECIMAL}, #{doneRatio,jdbcType=DECIMAL}, #{retailSalesGrowth,jdbcType=DECIMAL}, 
      #{salesGrowth,jdbcType=DECIMAL}, #{overallGrowth,jdbcType=DECIMAL}, #{totalApply,jdbcType=INTEGER}, 
      #{realAdd,jdbcType=INTEGER}, #{overfulfilledAdd,jdbcType=INTEGER}, #{addScore,jdbcType=INTEGER}, 
      #{grossQualifying,jdbcType=INTEGER}, #{progressQualifying,jdbcType=INTEGER}, #{growthQualifying,jdbcType=INTEGER}, 
      #{addQualifying,jdbcType=INTEGER}, #{grossPoint,jdbcType=INTEGER}, #{growthPoint,jdbcType=INTEGER}, 
      #{taskPoint,jdbcType=INTEGER}, #{perPointValue,jdbcType=DECIMAL}, #{allowance,jdbcType=DECIMAL}, 
      #{addPoint,jdbcType=INTEGER}, #{totalPoint,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDone"  useGeneratedKeys="true" keyProperty="id">
    insert into township_annual_done
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="townshipId != null">
        township_id,
      </if>
      <if test="townshipName != null">
        township_name,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="retailSalesDone != null">
        retail_sales_done,
      </if>
      <if test="salesDone != null">
        sales_done,
      </if>
      <if test="grossDone != null">
        gross_done,
      </if>
      <if test="doneRatio != null">
        done_ratio,
      </if>
      <if test="retailSalesGrowth != null">
        retail_sales_growth,
      </if>
      <if test="salesGrowth != null">
        sales_growth,
      </if>
      <if test="overallGrowth != null">
        overall_growth,
      </if>
      <if test="totalApply != null">
        total_apply,
      </if>
      <if test="realAdd != null">
        real_add,
      </if>
      <if test="overfulfilledAdd != null">
        overfulfilled_add,
      </if>
      <if test="addScore != null">
        add_score,
      </if>
      <if test="grossQualifying != null">
        gross_qualifying,
      </if>
      <if test="progressQualifying != null">
        progress_qualifying,
      </if>
      <if test="growthQualifying != null">
        growth_qualifying,
      </if>
      <if test="addQualifying != null">
        add_qualifying,
      </if>
      <if test="grossPoint != null">
        gross_point,
      </if>
      <if test="growthPoint != null">
        growth_point,
      </if>
      <if test="taskPoint != null">
        task_point,
      </if>
      <if test="perPointValue != null">
        per_point_value,
      </if>
      <if test="allowance != null">
        allowance,
      </if>
      <if test="addPoint != null">
        add_point,
      </if>
      <if test="totalPoint != null">
        total_point,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="townshipId != null">
        #{townshipId,jdbcType=INTEGER},
      </if>
      <if test="townshipName != null">
        #{townshipName,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="retailSalesDone != null">
        #{retailSalesDone,jdbcType=DECIMAL},
      </if>
      <if test="salesDone != null">
        #{salesDone,jdbcType=DECIMAL},
      </if>
      <if test="grossDone != null">
        #{grossDone,jdbcType=DECIMAL},
      </if>
      <if test="doneRatio != null">
        #{doneRatio,jdbcType=DECIMAL},
      </if>
      <if test="retailSalesGrowth != null">
        #{retailSalesGrowth,jdbcType=DECIMAL},
      </if>
      <if test="salesGrowth != null">
        #{salesGrowth,jdbcType=DECIMAL},
      </if>
      <if test="overallGrowth != null">
        #{overallGrowth,jdbcType=DECIMAL},
      </if>
      <if test="totalApply != null">
        #{totalApply,jdbcType=INTEGER},
      </if>
      <if test="realAdd != null">
        #{realAdd,jdbcType=INTEGER},
      </if>
      <if test="overfulfilledAdd != null">
        #{overfulfilledAdd,jdbcType=INTEGER},
      </if>
      <if test="addScore != null">
        #{addScore,jdbcType=INTEGER},
      </if>
      <if test="grossQualifying != null">
        #{grossQualifying,jdbcType=INTEGER},
      </if>
      <if test="progressQualifying != null">
        #{progressQualifying,jdbcType=INTEGER},
      </if>
      <if test="growthQualifying != null">
        #{growthQualifying,jdbcType=INTEGER},
      </if>
      <if test="addQualifying != null">
        #{addQualifying,jdbcType=INTEGER},
      </if>
      <if test="grossPoint != null">
        #{grossPoint,jdbcType=INTEGER},
      </if>
      <if test="growthPoint != null">
        #{growthPoint,jdbcType=INTEGER},
      </if>
      <if test="taskPoint != null">
        #{taskPoint,jdbcType=INTEGER},
      </if>
      <if test="perPointValue != null">
        #{perPointValue,jdbcType=DECIMAL},
      </if>
      <if test="allowance != null">
        #{allowance,jdbcType=DECIMAL},
      </if>
      <if test="addPoint != null">
        #{addPoint,jdbcType=INTEGER},
      </if>
      <if test="totalPoint != null">
        #{totalPoint,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDoneExample" resultType="java.lang.Integer">
    select count(*) from township_annual_done
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update township_annual_done
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.townshipId != null">
        township_id = #{record.townshipId,jdbcType=INTEGER},
      </if>
      <if test="record.townshipName != null">
        township_name = #{record.townshipName,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.retailSalesDone != null">
        retail_sales_done = #{record.retailSalesDone,jdbcType=DECIMAL},
      </if>
      <if test="record.salesDone != null">
        sales_done = #{record.salesDone,jdbcType=DECIMAL},
      </if>
      <if test="record.grossDone != null">
        gross_done = #{record.grossDone,jdbcType=DECIMAL},
      </if>
      <if test="record.doneRatio != null">
        done_ratio = #{record.doneRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.retailSalesGrowth != null">
        retail_sales_growth = #{record.retailSalesGrowth,jdbcType=DECIMAL},
      </if>
      <if test="record.salesGrowth != null">
        sales_growth = #{record.salesGrowth,jdbcType=DECIMAL},
      </if>
      <if test="record.overallGrowth != null">
        overall_growth = #{record.overallGrowth,jdbcType=DECIMAL},
      </if>
      <if test="record.totalApply != null">
        total_apply = #{record.totalApply,jdbcType=INTEGER},
      </if>
      <if test="record.realAdd != null">
        real_add = #{record.realAdd,jdbcType=INTEGER},
      </if>
      <if test="record.overfulfilledAdd != null">
        overfulfilled_add = #{record.overfulfilledAdd,jdbcType=INTEGER},
      </if>
      <if test="record.addScore != null">
        add_score = #{record.addScore,jdbcType=INTEGER},
      </if>
      <if test="record.grossQualifying != null">
        gross_qualifying = #{record.grossQualifying,jdbcType=INTEGER},
      </if>
      <if test="record.progressQualifying != null">
        progress_qualifying = #{record.progressQualifying,jdbcType=INTEGER},
      </if>
      <if test="record.growthQualifying != null">
        growth_qualifying = #{record.growthQualifying,jdbcType=INTEGER},
      </if>
      <if test="record.addQualifying != null">
        add_qualifying = #{record.addQualifying,jdbcType=INTEGER},
      </if>
      <if test="record.grossPoint != null">
        gross_point = #{record.grossPoint,jdbcType=INTEGER},
      </if>
      <if test="record.growthPoint != null">
        growth_point = #{record.growthPoint,jdbcType=INTEGER},
      </if>
      <if test="record.taskPoint != null">
        task_point = #{record.taskPoint,jdbcType=INTEGER},
      </if>
      <if test="record.perPointValue != null">
        per_point_value = #{record.perPointValue,jdbcType=DECIMAL},
      </if>
      <if test="record.allowance != null">
        allowance = #{record.allowance,jdbcType=DECIMAL},
      </if>
      <if test="record.addPoint != null">
        add_point = #{record.addPoint,jdbcType=INTEGER},
      </if>
      <if test="record.totalPoint != null">
        total_point = #{record.totalPoint,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update township_annual_done
    set id = #{record.id,jdbcType=INTEGER},
      township_id = #{record.townshipId,jdbcType=INTEGER},
      township_name = #{record.townshipName,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      retail_sales_done = #{record.retailSalesDone,jdbcType=DECIMAL},
      sales_done = #{record.salesDone,jdbcType=DECIMAL},
      gross_done = #{record.grossDone,jdbcType=DECIMAL},
      done_ratio = #{record.doneRatio,jdbcType=DECIMAL},
      retail_sales_growth = #{record.retailSalesGrowth,jdbcType=DECIMAL},
      sales_growth = #{record.salesGrowth,jdbcType=DECIMAL},
      overall_growth = #{record.overallGrowth,jdbcType=DECIMAL},
      total_apply = #{record.totalApply,jdbcType=INTEGER},
      real_add = #{record.realAdd,jdbcType=INTEGER},
      overfulfilled_add = #{record.overfulfilledAdd,jdbcType=INTEGER},
      add_score = #{record.addScore,jdbcType=INTEGER},
      gross_qualifying = #{record.grossQualifying,jdbcType=INTEGER},
      progress_qualifying = #{record.progressQualifying,jdbcType=INTEGER},
      growth_qualifying = #{record.growthQualifying,jdbcType=INTEGER},
      add_qualifying = #{record.addQualifying,jdbcType=INTEGER},
      gross_point = #{record.grossPoint,jdbcType=INTEGER},
      growth_point = #{record.growthPoint,jdbcType=INTEGER},
      task_point = #{record.taskPoint,jdbcType=INTEGER},
      per_point_value = #{record.perPointValue,jdbcType=DECIMAL},
      allowance = #{record.allowance,jdbcType=DECIMAL},
      add_point = #{record.addPoint,jdbcType=INTEGER},
      total_point = #{record.totalPoint,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDone">
    update township_annual_done
    <set>
      <if test="townshipId != null">
        township_id = #{townshipId,jdbcType=INTEGER},
      </if>
      <if test="townshipName != null">
        township_name = #{townshipName,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="retailSalesDone != null">
        retail_sales_done = #{retailSalesDone,jdbcType=DECIMAL},
      </if>
      <if test="salesDone != null">
        sales_done = #{salesDone,jdbcType=DECIMAL},
      </if>
      <if test="grossDone != null">
        gross_done = #{grossDone,jdbcType=DECIMAL},
      </if>
      <if test="doneRatio != null">
        done_ratio = #{doneRatio,jdbcType=DECIMAL},
      </if>
      <if test="retailSalesGrowth != null">
        retail_sales_growth = #{retailSalesGrowth,jdbcType=DECIMAL},
      </if>
      <if test="salesGrowth != null">
        sales_growth = #{salesGrowth,jdbcType=DECIMAL},
      </if>
      <if test="overallGrowth != null">
        overall_growth = #{overallGrowth,jdbcType=DECIMAL},
      </if>
      <if test="totalApply != null">
        total_apply = #{totalApply,jdbcType=INTEGER},
      </if>
      <if test="realAdd != null">
        real_add = #{realAdd,jdbcType=INTEGER},
      </if>
      <if test="overfulfilledAdd != null">
        overfulfilled_add = #{overfulfilledAdd,jdbcType=INTEGER},
      </if>
      <if test="addScore != null">
        add_score = #{addScore,jdbcType=INTEGER},
      </if>
      <if test="grossQualifying != null">
        gross_qualifying = #{grossQualifying,jdbcType=INTEGER},
      </if>
      <if test="progressQualifying != null">
        progress_qualifying = #{progressQualifying,jdbcType=INTEGER},
      </if>
      <if test="growthQualifying != null">
        growth_qualifying = #{growthQualifying,jdbcType=INTEGER},
      </if>
      <if test="addQualifying != null">
        add_qualifying = #{addQualifying,jdbcType=INTEGER},
      </if>
      <if test="grossPoint != null">
        gross_point = #{grossPoint,jdbcType=INTEGER},
      </if>
      <if test="growthPoint != null">
        growth_point = #{growthPoint,jdbcType=INTEGER},
      </if>
      <if test="taskPoint != null">
        task_point = #{taskPoint,jdbcType=INTEGER},
      </if>
      <if test="perPointValue != null">
        per_point_value = #{perPointValue,jdbcType=DECIMAL},
      </if>
      <if test="allowance != null">
        allowance = #{allowance,jdbcType=DECIMAL},
      </if>
      <if test="addPoint != null">
        add_point = #{addPoint,jdbcType=INTEGER},
      </if>
      <if test="totalPoint != null">
        total_point = #{totalPoint,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDone">
    update township_annual_done
    set township_id = #{townshipId,jdbcType=INTEGER},
      township_name = #{townshipName,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      retail_sales_done = #{retailSalesDone,jdbcType=DECIMAL},
      sales_done = #{salesDone,jdbcType=DECIMAL},
      gross_done = #{grossDone,jdbcType=DECIMAL},
      done_ratio = #{doneRatio,jdbcType=DECIMAL},
      retail_sales_growth = #{retailSalesGrowth,jdbcType=DECIMAL},
      sales_growth = #{salesGrowth,jdbcType=DECIMAL},
      overall_growth = #{overallGrowth,jdbcType=DECIMAL},
      total_apply = #{totalApply,jdbcType=INTEGER},
      real_add = #{realAdd,jdbcType=INTEGER},
      overfulfilled_add = #{overfulfilledAdd,jdbcType=INTEGER},
      add_score = #{addScore,jdbcType=INTEGER},
      gross_qualifying = #{grossQualifying,jdbcType=INTEGER},
      progress_qualifying = #{progressQualifying,jdbcType=INTEGER},
      growth_qualifying = #{growthQualifying,jdbcType=INTEGER},
      add_qualifying = #{addQualifying,jdbcType=INTEGER},
      gross_point = #{grossPoint,jdbcType=INTEGER},
      growth_point = #{growthPoint,jdbcType=INTEGER},
      task_point = #{taskPoint,jdbcType=INTEGER},
      per_point_value = #{perPointValue,jdbcType=DECIMAL},
      allowance = #{allowance,jdbcType=DECIMAL},
      add_point = #{addPoint,jdbcType=INTEGER},
      total_point = #{totalPoint,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.com.yuanwei.center.entity.TownshipAnnualDoneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from township_annual_done
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <!-- 自定义SQL -->
  <resultMap id="TownshipAnnualDoneVoResultMap" type="cn.com.yuanwei.center.entity.TownshipAnnualDoneVo">
    <result column="retail_sales_done" jdbcType="INTEGER" property="retailSalesDone" />
    <result column="sales_done" jdbcType="INTEGER" property="salesDone" />
    <result column="gross_done" jdbcType="INTEGER" property="grossDone" />
    <result column="real_add" jdbcType="INTEGER" property="realAdd" />
    <result column="total_task" jdbcType="INTEGER" property="totalTask" />
    <result column="add_task" jdbcType="INTEGER" property="addTask" />
    <result column="total_apply" jdbcType="INTEGER" property="totalApply" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="township_id" jdbcType="INTEGER" property="townshipId" />
  </resultMap>
  <select id="selectTownshipAnnualDoneList" parameterType="map" resultMap="TownshipAnnualDoneVoResultMap">
	SELECT
				IFNULL(SUM(a.retail_sales),0) AS retail_sales_done,
				IFNULL(SUM(a.sales),0) AS sales_done,
				IFNULL(SUM(a.retail_sales*0.6 + a.sales*0.4),0) AS gross_done,
				COUNT(DISTINCT d.id) AS real_add,
				IFNULL(b.total_task,0) AS total_task,
      			IFNULL(b.add_task,0) AS add_task, 
      			IFNULL(b.total_apply,0) AS total_apply, 
			    b.id as task_id,
				c.township_id
			FROM
				real_report a JOIN enterprise c ON a.enterprise_code = c.enterprise_code 
	LEFT JOIN township_annual_task b ON a.`year` = b.`year` AND b.township_id = c.township_id
	LEFT JOIN enterprise_manage d ON a.enterprise_code = d.enterprise_code AND year(d.in_date)= #{year}
        WHERE a.`year` = #{year}
      <if test="townshipId != null">
        AND c.township_id = #{townshipId}
      </if>	
      <if test="month != null">
        AND a.`month` BETWEEN 1 AND #{month}
      </if>	
		GROUP BY c.township_id
  </select>
  <select id="selectCountAnnualTask" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	SELECT
		count(*)
	FROM
		township
	WHERE
		NOT EXISTS (
			SELECT
				1
			FROM
				township_annual_task
			WHERE
				township.id = township_id
			AND `year` = #{year}
		) 
  </select>
  <select id="selectCountRealReport" parameterType="java.lang.Integer" resultType="cn.com.yuanwei.center.entity.CheckMonthVo">
		SELECT
			count(DISTINCT `month`) months,
			IFNULL(max(`month`),0) maxMonth
		FROM
			real_report
		WHERE
			`year` = #{year}
  </select>
  <cache />
</mapper>