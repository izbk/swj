<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yuanwei.center.mapper.EnterpriseMapper">
  <resultMap id="BaseResultMap" type="cn.com.yuanwei.center.entity.Enterprise">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="enterprise_code" jdbcType="VARCHAR" property="enterpriseCode" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="township_id" jdbcType="INTEGER" property="townshipId" />
    <result column="enterprise_type" jdbcType="INTEGER" property="enterpriseType" />
    <result column="industry" jdbcType="INTEGER" property="industry" />
    <result column="charge_name" jdbcType="VARCHAR" property="chargeName" />
    <result column="charge_mobile" jdbcType="VARCHAR" property="chargeMobile" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="in_date" jdbcType="TIMESTAMP" property="inDate" />
    <result column="out_date" jdbcType="TIMESTAMP" property="outDate" />
    <result column="in_type" jdbcType="INTEGER" property="inType" />
    <result column="agent" jdbcType="INTEGER" property="agent" />
    <result column="threshold" jdbcType="DECIMAL" property="threshold" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, enterprise_code, enterprise_name, township_id, enterprise_type, industry, charge_name, 
    charge_mobile, user_id, user_name, in_date, out_date, in_type, agent, threshold, 
    create_by, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.com.yuanwei.center.entity.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yuanwei.center.entity.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yuanwei.center.entity.Enterprise">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise (enterprise_code, enterprise_name, township_id, 
      enterprise_type, industry, charge_name, 
      charge_mobile, user_id, user_name, 
      in_date, out_date, in_type, 
      agent, threshold, create_by, 
      create_time)
    values (#{enterpriseCode,jdbcType=VARCHAR}, #{enterpriseName,jdbcType=VARCHAR}, #{townshipId,jdbcType=INTEGER}, 
      #{enterpriseType,jdbcType=INTEGER}, #{industry,jdbcType=INTEGER}, #{chargeName,jdbcType=VARCHAR}, 
      #{chargeMobile,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{inDate,jdbcType=TIMESTAMP}, #{outDate,jdbcType=TIMESTAMP}, #{inType,jdbcType=INTEGER}, 
      #{agent,jdbcType=INTEGER}, #{threshold,jdbcType=DECIMAL}, #{createBy,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yuanwei.center.entity.Enterprise">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseCode != null">
        enterprise_code,
      </if>
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="townshipId != null">
        township_id,
      </if>
      <if test="enterpriseType != null">
        enterprise_type,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="chargeName != null">
        charge_name,
      </if>
      <if test="chargeMobile != null">
        charge_mobile,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="outDate != null">
        out_date,
      </if>
      <if test="inType != null">
        in_type,
      </if>
      <if test="agent != null">
        agent,
      </if>
      <if test="threshold != null">
        threshold,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseCode != null">
        #{enterpriseCode,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="townshipId != null">
        #{townshipId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseType != null">
        #{enterpriseType,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=INTEGER},
      </if>
      <if test="chargeName != null">
        #{chargeName,jdbcType=VARCHAR},
      </if>
      <if test="chargeMobile != null">
        #{chargeMobile,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="outDate != null">
        #{outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inType != null">
        #{inType,jdbcType=INTEGER},
      </if>
      <if test="agent != null">
        #{agent,jdbcType=INTEGER},
      </if>
      <if test="threshold != null">
        #{threshold,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yuanwei.center.entity.EnterpriseExample" resultType="java.lang.Integer">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseCode != null">
        enterprise_code = #{record.enterpriseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.townshipId != null">
        township_id = #{record.townshipId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseType != null">
        enterprise_type = #{record.enterpriseType,jdbcType=INTEGER},
      </if>
      <if test="record.industry != null">
        industry = #{record.industry,jdbcType=INTEGER},
      </if>
      <if test="record.chargeName != null">
        charge_name = #{record.chargeName,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeMobile != null">
        charge_mobile = #{record.chargeMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.inDate != null">
        in_date = #{record.inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outDate != null">
        out_date = #{record.outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inType != null">
        in_type = #{record.inType,jdbcType=INTEGER},
      </if>
      <if test="record.agent != null">
        agent = #{record.agent,jdbcType=INTEGER},
      </if>
      <if test="record.threshold != null">
        threshold = #{record.threshold,jdbcType=DECIMAL},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set id = #{record.id,jdbcType=INTEGER},
      enterprise_code = #{record.enterpriseCode,jdbcType=VARCHAR},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      township_id = #{record.townshipId,jdbcType=INTEGER},
      enterprise_type = #{record.enterpriseType,jdbcType=INTEGER},
      industry = #{record.industry,jdbcType=INTEGER},
      charge_name = #{record.chargeName,jdbcType=VARCHAR},
      charge_mobile = #{record.chargeMobile,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      in_date = #{record.inDate,jdbcType=TIMESTAMP},
      out_date = #{record.outDate,jdbcType=TIMESTAMP},
      in_type = #{record.inType,jdbcType=INTEGER},
      agent = #{record.agent,jdbcType=INTEGER},
      threshold = #{record.threshold,jdbcType=DECIMAL},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yuanwei.center.entity.Enterprise">
    update enterprise
    <set>
      <if test="enterpriseCode != null">
        enterprise_code = #{enterpriseCode,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="townshipId != null">
        township_id = #{townshipId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseType != null">
        enterprise_type = #{enterpriseType,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=INTEGER},
      </if>
      <if test="chargeName != null">
        charge_name = #{chargeName,jdbcType=VARCHAR},
      </if>
      <if test="chargeMobile != null">
        charge_mobile = #{chargeMobile,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="outDate != null">
        out_date = #{outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inType != null">
        in_type = #{inType,jdbcType=INTEGER},
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=INTEGER},
      </if>
      <if test="threshold != null">
        threshold = #{threshold,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yuanwei.center.entity.Enterprise">
    update enterprise
    set enterprise_code = #{enterpriseCode,jdbcType=VARCHAR},
      enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      township_id = #{townshipId,jdbcType=INTEGER},
      enterprise_type = #{enterpriseType,jdbcType=INTEGER},
      industry = #{industry,jdbcType=INTEGER},
      charge_name = #{chargeName,jdbcType=VARCHAR},
      charge_mobile = #{chargeMobile,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      out_date = #{outDate,jdbcType=TIMESTAMP},
      in_type = #{inType,jdbcType=INTEGER},
      agent = #{agent,jdbcType=INTEGER},
      threshold = #{threshold,jdbcType=DECIMAL},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.com.yuanwei.center.entity.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>