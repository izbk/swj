<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yuanwei.center.mapper.EnterpriseRiseMapper">
  <resultMap id="BaseResultMap" type="cn.com.yuanwei.center.entity.EnterpriseRise">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="enter_compare_rise" jdbcType="DECIMAL" property="enterCompareRise" />
    <result column="enter_random_rise" jdbcType="DECIMAL" property="enterRandomRise" />
    <result column="person_compare_rise" jdbcType="DECIMAL" property="personCompareRise" />
    <result column="person_random_rise" jdbcType="DECIMAL" property="personRandomRise" />
    <result column="report_difference" jdbcType="DECIMAL" property="reportDifference" />
    <result column="forecast_difference" jdbcType="DECIMAL" property="forecastDifference" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, enter_compare_rise, enter_random_rise, person_compare_rise, person_random_rise, 
    report_difference, forecast_difference
  </sql>
  <select id="selectByExample" parameterType="cn.com.yuanwei.center.entity.EnterpriseRiseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise_rise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise_rise
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise_rise
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yuanwei.center.entity.EnterpriseRiseExample">
    delete from enterprise_rise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yuanwei.center.entity.EnterpriseRise">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise_rise (enter_compare_rise, enter_random_rise, 
      person_compare_rise, person_random_rise, report_difference, 
      forecast_difference)
    values (#{enterCompareRise,jdbcType=DECIMAL}, #{enterRandomRise,jdbcType=DECIMAL}, 
      #{personCompareRise,jdbcType=DECIMAL}, #{personRandomRise,jdbcType=DECIMAL}, #{reportDifference,jdbcType=DECIMAL}, 
      #{forecastDifference,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yuanwei.center.entity.EnterpriseRise">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enterprise_rise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterCompareRise != null">
        enter_compare_rise,
      </if>
      <if test="enterRandomRise != null">
        enter_random_rise,
      </if>
      <if test="personCompareRise != null">
        person_compare_rise,
      </if>
      <if test="personRandomRise != null">
        person_random_rise,
      </if>
      <if test="reportDifference != null">
        report_difference,
      </if>
      <if test="forecastDifference != null">
        forecast_difference,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterCompareRise != null">
        #{enterCompareRise,jdbcType=DECIMAL},
      </if>
      <if test="enterRandomRise != null">
        #{enterRandomRise,jdbcType=DECIMAL},
      </if>
      <if test="personCompareRise != null">
        #{personCompareRise,jdbcType=DECIMAL},
      </if>
      <if test="personRandomRise != null">
        #{personRandomRise,jdbcType=DECIMAL},
      </if>
      <if test="reportDifference != null">
        #{reportDifference,jdbcType=DECIMAL},
      </if>
      <if test="forecastDifference != null">
        #{forecastDifference,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yuanwei.center.entity.EnterpriseRiseExample" resultType="java.lang.Integer">
    select count(*) from enterprise_rise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise_rise
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.enterCompareRise != null">
        enter_compare_rise = #{record.enterCompareRise,jdbcType=DECIMAL},
      </if>
      <if test="record.enterRandomRise != null">
        enter_random_rise = #{record.enterRandomRise,jdbcType=DECIMAL},
      </if>
      <if test="record.personCompareRise != null">
        person_compare_rise = #{record.personCompareRise,jdbcType=DECIMAL},
      </if>
      <if test="record.personRandomRise != null">
        person_random_rise = #{record.personRandomRise,jdbcType=DECIMAL},
      </if>
      <if test="record.reportDifference != null">
        report_difference = #{record.reportDifference,jdbcType=DECIMAL},
      </if>
      <if test="record.forecastDifference != null">
        forecast_difference = #{record.forecastDifference,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise_rise
    set id = #{record.id,jdbcType=INTEGER},
      enter_compare_rise = #{record.enterCompareRise,jdbcType=DECIMAL},
      enter_random_rise = #{record.enterRandomRise,jdbcType=DECIMAL},
      person_compare_rise = #{record.personCompareRise,jdbcType=DECIMAL},
      person_random_rise = #{record.personRandomRise,jdbcType=DECIMAL},
      report_difference = #{record.reportDifference,jdbcType=DECIMAL},
      forecast_difference = #{record.forecastDifference,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yuanwei.center.entity.EnterpriseRise">
    update enterprise_rise
    <set>
      <if test="enterCompareRise != null">
        enter_compare_rise = #{enterCompareRise,jdbcType=DECIMAL},
      </if>
      <if test="enterRandomRise != null">
        enter_random_rise = #{enterRandomRise,jdbcType=DECIMAL},
      </if>
      <if test="personCompareRise != null">
        person_compare_rise = #{personCompareRise,jdbcType=DECIMAL},
      </if>
      <if test="personRandomRise != null">
        person_random_rise = #{personRandomRise,jdbcType=DECIMAL},
      </if>
      <if test="reportDifference != null">
        report_difference = #{reportDifference,jdbcType=DECIMAL},
      </if>
      <if test="forecastDifference != null">
        forecast_difference = #{forecastDifference,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yuanwei.center.entity.EnterpriseRise">
    update enterprise_rise
    set enter_compare_rise = #{enterCompareRise,jdbcType=DECIMAL},
      enter_random_rise = #{enterRandomRise,jdbcType=DECIMAL},
      person_compare_rise = #{personCompareRise,jdbcType=DECIMAL},
      person_random_rise = #{personRandomRise,jdbcType=DECIMAL},
      report_difference = #{reportDifference,jdbcType=DECIMAL},
      forecast_difference = #{forecastDifference,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.com.yuanwei.center.entity.EnterpriseRiseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise_rise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>