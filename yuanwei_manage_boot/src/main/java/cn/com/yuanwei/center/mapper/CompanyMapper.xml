<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yuanwei.center.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="cn.com.yuanwei.center.entity.Company">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="enterprise_type" jdbcType="INTEGER" property="enterpriseType" />
    <result column="industry_type" jdbcType="INTEGER" property="industryType" />
    <result column="charge_name" jdbcType="VARCHAR" property="chargeName" />
    <result column="charge_mobile" jdbcType="VARCHAR" property="chargeMobile" />
    <result column="mian_business" jdbcType="VARCHAR" property="mianBusiness" />
    <result column="avg_turnover" jdbcType="INTEGER" property="avgTurnover" />
    <result column="employees" jdbcType="INTEGER" property="employees" />
    <result column="is_seed" jdbcType="INTEGER" property="isSeed" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="audit1_by" jdbcType="INTEGER" property="audit1By" />
    <result column="audit1_time" jdbcType="TIMESTAMP" property="audit1Time" />
    <result column="audit2_by" jdbcType="INTEGER" property="audit2By" />
    <result column="audit2_time" jdbcType="TIMESTAMP" property="audit2Time" />
    <result column="audit3_by" jdbcType="INTEGER" property="audit3By" />
    <result column="audit3_time" jdbcType="TIMESTAMP" property="audit3Time" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.com.yuanwei.center.entity.Company">
    <result column="audit1_opinion" jdbcType="LONGVARCHAR" property="audit1Opinion" />
    <result column="audit2_opinion" jdbcType="LONGVARCHAR" property="audit2Opinion" />
    <result column="audit3_opinion" jdbcType="LONGVARCHAR" property="audit3Opinion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company_name, enterprise_type, industry_type, charge_name, charge_mobile, mian_business, 
    avg_turnover, employees, is_seed, status, audit1_by, audit1_time, audit2_by, audit2_time, 
    audit3_by, audit3_time, create_time
  </sql>
  <sql id="Blob_Column_List">
    audit1_opinion, audit2_opinion, audit3_opinion
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.com.yuanwei.center.entity.CompanyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.com.yuanwei.center.entity.CompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yuanwei.center.entity.CompanyExample">
    delete from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yuanwei.center.entity.Company">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company (company_name, enterprise_type, industry_type, 
      charge_name, charge_mobile, mian_business, 
      avg_turnover, employees, is_seed, 
      status, audit1_by, audit1_time, 
      audit2_by, audit2_time, audit3_by, 
      audit3_time, create_time, audit1_opinion, 
      audit2_opinion, audit3_opinion)
    values (#{companyName,jdbcType=VARCHAR}, #{enterpriseType,jdbcType=INTEGER}, #{industryType,jdbcType=INTEGER}, 
      #{chargeName,jdbcType=VARCHAR}, #{chargeMobile,jdbcType=VARCHAR}, #{mianBusiness,jdbcType=VARCHAR}, 
      #{avgTurnover,jdbcType=INTEGER}, #{employees,jdbcType=INTEGER}, #{isSeed,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{audit1By,jdbcType=INTEGER}, #{audit1Time,jdbcType=TIMESTAMP}, 
      #{audit2By,jdbcType=INTEGER}, #{audit2Time,jdbcType=TIMESTAMP}, #{audit3By,jdbcType=INTEGER}, 
      #{audit3Time,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{audit1Opinion,jdbcType=LONGVARCHAR}, 
      #{audit2Opinion,jdbcType=LONGVARCHAR}, #{audit3Opinion,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yuanwei.center.entity.Company">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyName != null">
        company_name,
      </if>
      <if test="enterpriseType != null">
        enterprise_type,
      </if>
      <if test="industryType != null">
        industry_type,
      </if>
      <if test="chargeName != null">
        charge_name,
      </if>
      <if test="chargeMobile != null">
        charge_mobile,
      </if>
      <if test="mianBusiness != null">
        mian_business,
      </if>
      <if test="avgTurnover != null">
        avg_turnover,
      </if>
      <if test="employees != null">
        employees,
      </if>
      <if test="isSeed != null">
        is_seed,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="audit1By != null">
        audit1_by,
      </if>
      <if test="audit1Time != null">
        audit1_time,
      </if>
      <if test="audit2By != null">
        audit2_by,
      </if>
      <if test="audit2Time != null">
        audit2_time,
      </if>
      <if test="audit3By != null">
        audit3_by,
      </if>
      <if test="audit3Time != null">
        audit3_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="audit1Opinion != null">
        audit1_opinion,
      </if>
      <if test="audit2Opinion != null">
        audit2_opinion,
      </if>
      <if test="audit3Opinion != null">
        audit3_opinion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseType != null">
        #{enterpriseType,jdbcType=INTEGER},
      </if>
      <if test="industryType != null">
        #{industryType,jdbcType=INTEGER},
      </if>
      <if test="chargeName != null">
        #{chargeName,jdbcType=VARCHAR},
      </if>
      <if test="chargeMobile != null">
        #{chargeMobile,jdbcType=VARCHAR},
      </if>
      <if test="mianBusiness != null">
        #{mianBusiness,jdbcType=VARCHAR},
      </if>
      <if test="avgTurnover != null">
        #{avgTurnover,jdbcType=INTEGER},
      </if>
      <if test="employees != null">
        #{employees,jdbcType=INTEGER},
      </if>
      <if test="isSeed != null">
        #{isSeed,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="audit1By != null">
        #{audit1By,jdbcType=INTEGER},
      </if>
      <if test="audit1Time != null">
        #{audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit2By != null">
        #{audit2By,jdbcType=INTEGER},
      </if>
      <if test="audit2Time != null">
        #{audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit3By != null">
        #{audit3By,jdbcType=INTEGER},
      </if>
      <if test="audit3Time != null">
        #{audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1Opinion != null">
        #{audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit2Opinion != null">
        #{audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit3Opinion != null">
        #{audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yuanwei.center.entity.CompanyExample" resultType="java.lang.Integer">
    select count(*) from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseType != null">
        enterprise_type = #{record.enterpriseType,jdbcType=INTEGER},
      </if>
      <if test="record.industryType != null">
        industry_type = #{record.industryType,jdbcType=INTEGER},
      </if>
      <if test="record.chargeName != null">
        charge_name = #{record.chargeName,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeMobile != null">
        charge_mobile = #{record.chargeMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.mianBusiness != null">
        mian_business = #{record.mianBusiness,jdbcType=VARCHAR},
      </if>
      <if test="record.avgTurnover != null">
        avg_turnover = #{record.avgTurnover,jdbcType=INTEGER},
      </if>
      <if test="record.employees != null">
        employees = #{record.employees,jdbcType=INTEGER},
      </if>
      <if test="record.isSeed != null">
        is_seed = #{record.isSeed,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.audit1By != null">
        audit1_by = #{record.audit1By,jdbcType=INTEGER},
      </if>
      <if test="record.audit1Time != null">
        audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit2By != null">
        audit2_by = #{record.audit2By,jdbcType=INTEGER},
      </if>
      <if test="record.audit2Time != null">
        audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit3By != null">
        audit3_by = #{record.audit3By,jdbcType=INTEGER},
      </if>
      <if test="record.audit3Time != null">
        audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audit1Opinion != null">
        audit1_opinion = #{record.audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.audit2Opinion != null">
        audit2_opinion = #{record.audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.audit3Opinion != null">
        audit3_opinion = #{record.audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update company
    set id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      enterprise_type = #{record.enterpriseType,jdbcType=INTEGER},
      industry_type = #{record.industryType,jdbcType=INTEGER},
      charge_name = #{record.chargeName,jdbcType=VARCHAR},
      charge_mobile = #{record.chargeMobile,jdbcType=VARCHAR},
      mian_business = #{record.mianBusiness,jdbcType=VARCHAR},
      avg_turnover = #{record.avgTurnover,jdbcType=INTEGER},
      employees = #{record.employees,jdbcType=INTEGER},
      is_seed = #{record.isSeed,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      audit1_by = #{record.audit1By,jdbcType=INTEGER},
      audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{record.audit2By,jdbcType=INTEGER},
      audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{record.audit3By,jdbcType=INTEGER},
      audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      audit1_opinion = #{record.audit1Opinion,jdbcType=LONGVARCHAR},
      audit2_opinion = #{record.audit2Opinion,jdbcType=LONGVARCHAR},
      audit3_opinion = #{record.audit3Opinion,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company
    set id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      enterprise_type = #{record.enterpriseType,jdbcType=INTEGER},
      industry_type = #{record.industryType,jdbcType=INTEGER},
      charge_name = #{record.chargeName,jdbcType=VARCHAR},
      charge_mobile = #{record.chargeMobile,jdbcType=VARCHAR},
      mian_business = #{record.mianBusiness,jdbcType=VARCHAR},
      avg_turnover = #{record.avgTurnover,jdbcType=INTEGER},
      employees = #{record.employees,jdbcType=INTEGER},
      is_seed = #{record.isSeed,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      audit1_by = #{record.audit1By,jdbcType=INTEGER},
      audit1_time = #{record.audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{record.audit2By,jdbcType=INTEGER},
      audit2_time = #{record.audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{record.audit3By,jdbcType=INTEGER},
      audit3_time = #{record.audit3Time,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yuanwei.center.entity.Company">
    update company
    <set>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseType != null">
        enterprise_type = #{enterpriseType,jdbcType=INTEGER},
      </if>
      <if test="industryType != null">
        industry_type = #{industryType,jdbcType=INTEGER},
      </if>
      <if test="chargeName != null">
        charge_name = #{chargeName,jdbcType=VARCHAR},
      </if>
      <if test="chargeMobile != null">
        charge_mobile = #{chargeMobile,jdbcType=VARCHAR},
      </if>
      <if test="mianBusiness != null">
        mian_business = #{mianBusiness,jdbcType=VARCHAR},
      </if>
      <if test="avgTurnover != null">
        avg_turnover = #{avgTurnover,jdbcType=INTEGER},
      </if>
      <if test="employees != null">
        employees = #{employees,jdbcType=INTEGER},
      </if>
      <if test="isSeed != null">
        is_seed = #{isSeed,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="audit1By != null">
        audit1_by = #{audit1By,jdbcType=INTEGER},
      </if>
      <if test="audit1Time != null">
        audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit2By != null">
        audit2_by = #{audit2By,jdbcType=INTEGER},
      </if>
      <if test="audit2Time != null">
        audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="audit3By != null">
        audit3_by = #{audit3By,jdbcType=INTEGER},
      </if>
      <if test="audit3Time != null">
        audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="audit1Opinion != null">
        audit1_opinion = #{audit1Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit2Opinion != null">
        audit2_opinion = #{audit2Opinion,jdbcType=LONGVARCHAR},
      </if>
      <if test="audit3Opinion != null">
        audit3_opinion = #{audit3Opinion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.yuanwei.center.entity.Company">
    update company
    set company_name = #{companyName,jdbcType=VARCHAR},
      enterprise_type = #{enterpriseType,jdbcType=INTEGER},
      industry_type = #{industryType,jdbcType=INTEGER},
      charge_name = #{chargeName,jdbcType=VARCHAR},
      charge_mobile = #{chargeMobile,jdbcType=VARCHAR},
      mian_business = #{mianBusiness,jdbcType=VARCHAR},
      avg_turnover = #{avgTurnover,jdbcType=INTEGER},
      employees = #{employees,jdbcType=INTEGER},
      is_seed = #{isSeed,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      audit1_by = #{audit1By,jdbcType=INTEGER},
      audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{audit2By,jdbcType=INTEGER},
      audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{audit3By,jdbcType=INTEGER},
      audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      audit1_opinion = #{audit1Opinion,jdbcType=LONGVARCHAR},
      audit2_opinion = #{audit2Opinion,jdbcType=LONGVARCHAR},
      audit3_opinion = #{audit3Opinion,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yuanwei.center.entity.Company">
    update company
    set company_name = #{companyName,jdbcType=VARCHAR},
      enterprise_type = #{enterpriseType,jdbcType=INTEGER},
      industry_type = #{industryType,jdbcType=INTEGER},
      charge_name = #{chargeName,jdbcType=VARCHAR},
      charge_mobile = #{chargeMobile,jdbcType=VARCHAR},
      mian_business = #{mianBusiness,jdbcType=VARCHAR},
      avg_turnover = #{avgTurnover,jdbcType=INTEGER},
      employees = #{employees,jdbcType=INTEGER},
      is_seed = #{isSeed,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      audit1_by = #{audit1By,jdbcType=INTEGER},
      audit1_time = #{audit1Time,jdbcType=TIMESTAMP},
      audit2_by = #{audit2By,jdbcType=INTEGER},
      audit2_time = #{audit2Time,jdbcType=TIMESTAMP},
      audit3_by = #{audit3By,jdbcType=INTEGER},
      audit3_time = #{audit3Time,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.com.yuanwei.center.entity.CompanyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.com.yuanwei.center.entity.CompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>